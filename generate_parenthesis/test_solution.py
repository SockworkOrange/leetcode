import unittest

from generate_parenthesis.solution import Solution


class SolutionTest(unittest.TestCase):
    sln = Solution()

    def test_generate_parentheses(self):
        assert self.sln.generate_parenthesis(1) == ["()"]
        assert self.sln.generate_parenthesis(2) == ["(())", "()()"]
        assert self.sln.generate_parenthesis(3) == ["((()))", "(()())", "(())()", "()(())", "()()()"]
        assert self.sln.generate_parenthesis(4) == [
            "(((())))", "((()()))", "((())())", "((()))()", "(()(()))", "(()()())", "(()())()",
            "(())(())", "(())()()", "()((()))", "()(()())", "()(())()", "()()(())", "()()()()"
        ]
        assert self.sln.generate_parenthesis(5) == [
            "((((()))))","(((()())))","(((())()))","(((()))())","(((())))()","((()(())))","((()()()))",
            "((()())())","((()()))()","((())(()))","((())()())","((())())()","((()))(())","((()))()()",
            "(()((())))","(()(()()))","(()(())())","(()(()))()","(()()(()))","(()()()())","(()()())()",
            "(()())(())","(()())()()","(())((()))","(())(()())","(())(())()","(())()(())","(())()()()",
            "()(((())))","()((()()))","()((())())","()((()))()","()(()(()))","()(()()())","()(()())()",
            "()(())(())","()(())()()","()()((()))","()()(()())","()()(())()","()()()(())","()()()()()"
        ]